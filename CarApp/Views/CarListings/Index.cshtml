@using CarApp.Extensions;
@using CarApp.Core.ViewModels.CarListing
@model AllCarsQueryModel


<div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 20px;">
    @if (User?.Identity?.IsAuthenticated == true)
    {
        <a asp-controller="CarListings" asp-action="Add" class="btn btn-primary"><i class="fas fa-plus"></i>Add Car Listing</a>
    }
</div>
<hr />
<style>
    .card-img-top{
        width: 100%;
        height: 150px;
        object-fit: cover;
    }

</style>

<form method="get">
    <div class="row align-items-center">
        <div class="col-md-6">
            <label asp-for="Sorting" class="form-label">Sort By</label>
            <div class="input-group">
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Brand/Model/Year</option>
                    <option value="1">Car Year Descending</option>
                    <option value="2">Car Year Ascending</option>
                    <option value="3">Price Ascending</option>
                    <option value="4">Price Descending</option>
                    <option value="5">Date Added Ascending</option>
                    <option value="6">Date Added Descending</option>
                </select>
                <button type="submit" class="btn btn-primary">Sort</button>
            </div>
        </div>
    </div>
</form>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalCarsCount /
        Model.CarsPerPage);
}
@{
    var nextPage = Model.CurrentPage + 1 <= maxPage ? Model.CurrentPage + 1 : maxPage;
}
<div class="row mb-5 mt-5">
    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="CarListings"
           asp-action="Index"
           asp-route-currentPage="@previousPage"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    <div class="col-4 text-center">
        @{
            int currentPage = Model.CurrentPage;

            // Determine the page numbers to display
            var pagesToShow = new List<int>();

            if (currentPage == 1)
            {
                // First page case: Show the current and next two pages
                pagesToShow.Add(currentPage);
                if (currentPage + 1 <= maxPage) pagesToShow.Add(currentPage + 1);
                if (currentPage + 2 <= maxPage) pagesToShow.Add(currentPage + 2);
            }
            else if (currentPage == (int)maxPage)
            {
                // Last page case: Show the previous two pages and the current page
                if (currentPage - 2 > 0) pagesToShow.Add(currentPage - 2);
                if (currentPage - 1 > 0) pagesToShow.Add(currentPage - 1);
                pagesToShow.Add(currentPage);
            }
            else
            {
                // Middle page case: Show previous, current, and next pages
                if (currentPage - 1 > 0) pagesToShow.Add(currentPage - 1);
                pagesToShow.Add(currentPage);
                if (currentPage + 1 <= (int)maxPage) pagesToShow.Add(currentPage + 1);
            }
        }
        @if (currentPage != 1
            && 1 + currentPage > 3
            && maxPage > 3)
        {
            <a class="btn btn-dark"
               asp-controller="CarListings"
               asp-action="Index"
               asp-route-currentPage="1"
               asp-route-sorting="@((int)Model.Sorting)">
                1
            </a>
        }
        <div class="btn-group" role="group" aria-label="Pagination buttons">
            @foreach (var listingPage in pagesToShow)
            {
                if (listingPage == currentPage)
                {
                    <!-- Current Page Button (disabled) -->
                    <span class="btn btn-primary disabled">@listingPage</span>
                }
                else
                {
                    <!-- Other Page Buttons -->
                    <a class="btn btn-outline-primary"
                       asp-controller="CarListings"
                       asp-action="Index"
                       asp-route-currentPage="@listingPage"
                       asp-route-sorting="@((int)Model.Sorting)">
                        @listingPage
                    </a>
                }
            }
        </div>
        @if (currentPage != maxPage
        && maxPage - currentPage > 1
        && maxPage > 3)
        {
            <a class="btn btn-dark"
               asp-controller="CarListings"
               asp-action="Index"
               asp-route-currentPage="@maxPage"
               asp-route-sorting="@((int)Model.Sorting)">
                @maxPage
            </a>
        }
        
    </div>

    
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.CarListings.Any();
    }

    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="CarListings"
           asp-action="Index"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>
<div class="row text-center">
    @foreach(var carListing in Model.CarListings)
    {
        <partial name="_CarListingPartial" model="@carListing" />
    }
</div>