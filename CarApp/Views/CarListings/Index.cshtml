@model AllCarsQueryModel
@{
    ViewBag.BackArrow = "<<";
}

<div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 20px;">
    @if (User?.Identity?.IsAuthenticated == true)
    {
        <a asp-controller="CarListings" asp-action="Add" class="btn btn-primary">
            <i class="fas fa-plus"></i>Add Car Listing</a>
    }
</div>
<div class="filter-sort-container">
<form method="get">
        <div class="row filter-container">
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Brand">Car Brand</label>
                <select asp-for="Brand" class="form-select" id="carBrand" onchange="updateModels()">
                    <option value="">Select a Brand</option>
                    @foreach (var brandGroup in Model.Brands)
                    {
                        <optgroup label="@brandGroup.Key">
                            @foreach (var brand in brandGroup)
                            {
                                <option value="@brand.BrandName">@brand.BrandName</option> 
                               
                            }
                        </optgroup>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Model">Car Model</label>
                <select id="carModel" asp-for="Model" class="form-select">
                    <option value="">Select a Model</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="PriceLimit">Price up to</label>
                <select asp-for="PriceLimit" class="form-select">
                    <option value="">Price up to</option>
                    @foreach (int price in Model.PriceList)
                    {
                        if(Model.PriceLimit == price)
                        {
                            <option value="@price" selected>€@price</option>
                        }
                        else
                        {
                            <option value="@price">€@price</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <input asp-for="Sorting" type="hidden" value="@((int)Model.Sorting)" />
            <button type="submit" class="btn btn-primary mt-4 filter-button">Filter</button>
        </div>
            <div class="row text-center mt-3 refined-search-text">
                <a asp-action="Index" asp-controller="RefinedSearch">Refined Search</a>
            </div>
</div>
</form>
<form>
    <div class="row align-items-center">
        <div class="col-md-6">
            <label asp-for="Sorting" class="form-label">Sort By</label>
            <div class="input-group">
                <input asp-for="Brand" type="hidden" value="@Model.Brand" />
                <input asp-for="Model" type="hidden" value="@Model.Model" />
                <input asp-for="PriceLimit" type="hidden" value="@Model.PriceLimit" />

                    <select asp-for="Sorting" class="form-select" style="border-bottom-left-radius: 8px;border-top-left-radius: 8px;">
                    <option value="0">Brand/Model/Year</option>
                    <option value="1">Car Year Descending</option>
                    <option value="2">Car Year Ascending</option>
                    <option value="3">Price Ascending</option>
                    <option value="4">Price Descending</option>
                    <option value="5">Show Oldest First</option>
                    <option value="6">Show Newest First</option>
                </select>
                <button type="submit" class="btn btn-primary">Sort</button>
            </div>
        </div>
    </div>
</form>
</div>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalCarsCount /
        Model.CarsPerPage);
}
@{
    var nextPage = Model.CurrentPage + 1 <= maxPage ? Model.CurrentPage + 1 : maxPage;
}
<partial name="_PaginationLinksPartial" model="Model" />

<div class="row text-center">
    @foreach(var carListing in Model.CarListings)
    {
        <partial name="_CarListingPartial" model="@carListing" />
    }
</div>

@section Scripts {
    <script src="~/js/carSelectionIndex.js"></script>

    <script>
        const modelsData = [];

        @foreach (var carModel in Model.Models)
        {
            <text>
                    modelsData.push({
                        BrandName: "@Html.Raw(@carModel.CarBrand.BrandName)",
                    ModelName: "@Html.Raw(@carModel.ModelName)"
                                        });
            </text>
        }

            populateCarModels(modelsData);

        const selectedBrandName = "@Model.Brand";
        const selectedModelName = "@Model.Model";

        if (selectedBrandName) {
            updateModels();

            const modelSelect = document.getElementById("carModel");
            const selectedOption = Array.from(modelSelect.options)
                .find(option => option.value === selectedModelName);
            if (selectedOption) {
                selectedOption.selected = true;
            }
        }
    </script>
}